# -*- coding: utf-8 -*-

"""
    Домашня робота №4
    Тема: "Цикл while"
    Студент: Козирєв Антон Юрійович
    Група: КМ - 62
"""

#Task_1----------------------------------------------------#

"""
    Условие:
    По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
"""

def_num = 1;
i = 1 #Step counter
N = int(input()) #"Enter pow limit: "
if N <= def_num:
    N = def_num
while i ** 2 <= N:
    print(i ** 2)
    i += 1

#Variant 2

#i = 1 #Step counter
#num = "" #Row of Numbers
#N = int(input())
#while i ** 2 <= N:
#    num = num + str(i ** 2) + " "
#    i += 1
#print(num)

#----------------------------------------------------------#

#Task_2----------------------------------------------------#

"""
    Условие:
    Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""

def_num = 2 #Default value
num = int(input()) #"Enter devide number: "
if num <= def_num:
    num = def_num
dev = 2 #Default devider
while num % dev != 0:
    dev += 1
print(dev)

#----------------------------------------------------------#

#Task_3----------------------------------------------------#

"""
    Условие:
    По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.
    Операцией возведения в степень пользоваться нельзя!
"""

MaxP = int(input()) #"Enter maximum pow number:"
CurP = 0 #Current pow number
num = 1 #Current number
while (num * 2) <= MaxP: 
    CurP += 1 #Count of repeat
    num = num * 2; 
print(CurP, num)

#----------------------------------------------------------#

#Task_4----------------------------------------------------#

"""
    Условие:
    В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения.
    По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.
"""

days = 1 # Default days number
X = int(input()) #"Enter first attempt:"
Y = int(input()) #"Enter final try:"
while X < Y:
    X = X + 0.1*X
    days += 1
print(days)

#----------------------------------------------------------#

#Task_5----------------------------------------------------#

"""
    Условие:
    Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается.
    Определите, через сколько лет вклад составит не менее y рублей.
    Выражение «дробная часть копеек отбрасывается» означает, что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек, то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.
    Программа получает на вход три натуральных числа: x, p, y и должна вывести одно целое число.
"""

years = 0;

X = int(input()); #"Start deposit: "
P = int(input()); #"Interest: "
Y = int(input()); #"Get: "

while X < Y:
    X = round(X, 2);
    X = X + 0.01*P*X;
    years += 1;
print(years);

#----------------------------------------------------------#

#Task_6----------------------------------------------------#

"""
    Условие:
    Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке.
    Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести количество членов последовательности (не считая завершающего числа 0).
    Числа, следующие за числом 0, считывать не нужно.
"""


count = 0 #Numbers count

while True:
    num = int(input()) #"Enter number (enter 0 to stop): "
    if num == 0:
        break #not count +1
    count+=1
print(count)

#----------------------------------------------------------#

#Task_7----------------------------------------------------#

"""
    Условие:
    Определите сумму всех элементов последовательности, завершающейся числом 0.
    В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""

count = 0 #Numbers count
Sum = 0

while True:
    num = int(input())
    Sum = Sum + num;
    if num == 0:
        break #not count +1
    count+=1
print(Sum)

#----------------------------------------------------------#

#Task_8----------------------------------------------------#

"""
    Условие:
    Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""

count = 0 #Numbers count
Sum = 0

while True:
    num = int(input())
    Sum = Sum + num;
    if num == 0:
        break #not count +1
    count+=1
print(Sum / count) # (X1 + X2 + X3 + ... + Xn) / n 

#----------------------------------------------------------#

#Task_9----------------------------------------------------#

"""
    Условие:
    Последовательность состоит из натуральных чисел и завершается числом 0.
    Определите значение наибольшего элемента последовательности.
"""

count = 0 #Numbers count
d_num = 0 #Default value

while True:
    num = int(input())
    if num > d_num:
        d_num = num # Set temp var to bigger value
    if num == 0:
        break #not count +1
    count+=1
print(d_num)

#----------------------------------------------------------#

#Task_10---------------------------------------------------#

"""
    Условие:
    Последовательность состоит из натуральных чисел и завершается числом 0.
    Определите индекс наибольшего элемента последовательности.
    Если наибольших элементов несколько, выведите индекс первого из них.
    Нумерация элементов начинается с нуля.
"""

count = 0 #Numbers count
index = 0 #Default index
d_num = 0 #Default value

while True:
    num = int(input())
    if num == 0:
        break #not count +1
    if num > d_num:
        d_num = num # Set temp var to bigger value
        index = count
    count+=1
print(index)

#----------------------------------------------------------#

#Task_11---------------------------------------------------#

"""
    Условие:
    Определите количество четных элементов в последовательности, завершающейся числом 0.
"""

count = 0 #Numbers count
Mod = 0

while True:
    num = int(input())
    if num == 0:
        break #not count +1
    if num % 2 == 0:
        Mod += 1
    count+=1
print(Mod)

#----------------------------------------------------------#

#Task_12---------------------------------------------------#
count = 0 #Numbers count
Mod = 0

while True:
    num = int(input())
    if num == 0:
        break #not count +1
    if num % 2 == 0:
        Mod += 1
    count+=1
print(Mod)
#----------------------------------------------------------#

#Task_12---------------------------------------------------#

"""
    Условие:
    Последовательность состоит из различных натуральных чисел и завершается числом 0.
    Определите значение второго по величине элемента в этой последовательности
    Гарантируется, что в последовательности есть хотя бы два элемента.
"""

count = 0 #Numbers count
d_num = 0 #Default value
iMax2 = 0; # Second maximum

while True:
    num = int(input())
    if iMax2 <= num and iMax2 <= d_num:
        iMax2 = d_num
    if num > d_num:
        d_num = num # Set temp var to bigger value
    if num == 0:
        break #not count +1
    count+=1
print(iMax2)

#----------------------------------------------------------#